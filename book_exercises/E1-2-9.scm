(define (simps_rule f a b n)
	(define delta_x (/ (- b a) n))
	(define (compute f a b n delta_x)
			(if (equal? a n)
				(+ (f (* delta_x a)))
				(cond ((= 0 a) (+ (f 0) (compute f (+ a 1) b n delta_x)))
					  (else (if (even? a)
								(+ (* (f (* delta_x a)) 2) (compute f (+ a 1) b n delta_x))
								(+ (* (f (* delta_x a)) 4) (compute f (+ a 1) b n delta_x )))))))
	(* (/ (/ (- b a) n) 3) (compute f a b n delta_x))
)